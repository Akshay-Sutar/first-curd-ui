{"version":3,"sources":["components/layouts/Navbar.js","components/layouts/Layout.js","components/Todo/Todo.js","components/Todo/TodoList.js","components/Todo/AddNewTodo.js","pages/AllTodos.js","App.js","index.js"],"names":["Navbar","props","className","Layout","children","Todo","classes","completed","push","todoClickHandler","event","updatedTodo","title","description","fetch","id","method","headers","body","JSON","stringify","then","res","json","data","console","log","onUpdateTodo","catch","err","error","button","onClick","join","TodoList","todos","items","map","todo","_id","createdAt","updatedAt","Fragment","AddNewTodo","useRef","useState","enteredTitle","setTitle","enteredDescription","setDescription","htmlFor","type","ref","value","onChange","target","current","trim","length","newTodo","onCreateTodo","alert","AllTodos","todoList","setTodoList","fetchTodoList","parsedResponse","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.887af08e.chunk.js","sourcesContent":["const Navbar = (props) => {\r\n  const addNewTodoClickHandler = () => {};\r\n  return (\r\n    <nav className=\"navbar navbar-dark bg-dark\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"col-10\">\r\n          <h2 className=\"navbar-brand\">Todo</h2>\r\n        </div>\r\n        <div className=\"col-2\">\r\n          {/* <button\r\n            className=\"btn btn-primary btn-sm\"\r\n            onClick={addNewTodoClickHandler}\r\n          >\r\n            Add new Todo\r\n          </button> */}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import Navbar from \"./Navbar\";\r\n\r\nconst Layout = (props) => {\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <main>{props.children}</main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import \"./Todo.css\";\r\n\r\nconst Todo = (props) => {\r\n  const classes = [\"card\", \"todo\"];\r\n  if (props.completed) {\r\n    classes.push(\"todo-completed\");\r\n  } else {\r\n    classes.push(\"todo-pending\");\r\n  }\r\n\r\n  const todoClickHandler = (event) => {\r\n    const updatedTodo = {\r\n      title: props.title,\r\n      description: props.description,\r\n      completed: !props.completed,\r\n    };\r\n    fetch(`http://localhost:4000/api/v1/todo/${props.id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(updatedTodo),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        props.onUpdateTodo();\r\n      })\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  let button = (\r\n    <button\r\n      className=\"btn btn-outline-success btn-sm\"\r\n      onClick={todoClickHandler}\r\n    >\r\n      Mark as complete\r\n    </button>\r\n  );\r\n\r\n  if (props.completed) {\r\n    button = (\r\n      <button\r\n        className=\"btn btn-outline-danger btn-sm\"\r\n        onClick={todoClickHandler}\r\n      >\r\n        Mark as incomplete\r\n      </button>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.join(\" \")}>\r\n      <div className=\"row\">\r\n        <div className=\"col-8\">\r\n          <label>{props.title}</label>\r\n        </div>\r\n        <div className=\"col-2 align-self-end\">{button}</div>\r\n        <div className=\"col-2 align-self-end\">\r\n          <button className=\"btn btn-outline-danger btn-sm\">Delete</button>\r\n        </div>\r\n      </div>\r\n      <p>{props.description}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\nimport classes from \"./TodoList.css\";\r\nconst TodoList = (props) => {\r\n  const todos = props.items.map((todo) => {\r\n    return (\r\n      <Todo\r\n        key={todo._id}\r\n        id={todo._id}\r\n        description={todo.description}\r\n        title={todo.title}\r\n        completed={todo.completed}\r\n        createdAt={todo.createdAt}\r\n        updatedAt={todo.updatedAt}\r\n        onUpdateTodo={props.onUpdateTodo}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h4>Todo List</h4>\r\n      <div className={classes.TodoList}>{todos}</div>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default TodoList;\r\n","import { useState, useRef } from \"react\";\r\n\r\nconst AddNewTodo = (props) => {\r\n  const title = useRef();\r\n  const description = useRef();\r\n\r\n  const [enteredTitle, setTitle] = useState(\"\");\r\n  const [enteredDescription, setDescription] = useState(\"\");\r\n\r\n  const addNewTodohandler = (event) => {\r\n    if (title.current.value.trim().length === 0) {\r\n      alert(\"title cannot be empty\");\r\n      return;\r\n    }\r\n\r\n    const newTodo = {\r\n      title: title.current.value,\r\n      description: description.current.value,\r\n      completed: false,\r\n    };\r\n\r\n    fetch(\"http://localhost:4000/api/v1/todo\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(newTodo),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setTitle(\"\");\r\n        setDescription(\"\");\r\n        props.onCreateTodo();\r\n      })\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  const handleTitleChange = (event) => {\r\n    setTitle(event.target.value);\r\n  };\r\n\r\n  const handleDescriptionChange = (event) => {\r\n    setDescription(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"col align-self-center\">\r\n          <h4>Add new Todo</h4>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col align-self-center\">\r\n          <label htmlFor=\"title\">Title</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"title\"\r\n            ref={title}\r\n            value={enteredTitle}\r\n            onChange={handleTitleChange}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col align-self-center\">\r\n          <label htmlFor=\"description\">Description</label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"description\"\r\n            ref={description}\r\n            value={enteredDescription}\r\n            onChange={handleDescriptionChange}\r\n          ></textarea>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <button\r\n            className=\"btn btn-success btn-sm\"\r\n            onClick={addNewTodohandler}\r\n          >\r\n            Add new Todo\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddNewTodo;\r\n","import { useState } from \"react\";\r\nimport TodoList from \"../components/Todo/TodoList\";\r\nimport AddNewTodo from \"../components/Todo/AddNewTodo\";\r\n\r\nconst AllTodos = (props) => {\r\n  const [todoList, setTodoList] = useState([]);\r\n  //const [showList, setShowList] = useState(true);\r\n\r\n  const fetchTodoList = () => {\r\n    console.log(\"in fetchTodoList\");\r\n    fetch(\"http://localhost:4000/api/v1/todo\")\r\n      .then((res) => res.json())\r\n      .then((parsedResponse) => {\r\n        const { data } = parsedResponse;\r\n        setTodoList(data);\r\n      });\r\n  };\r\n\r\n  useState(() => {\r\n    console.log(\"in use state\");\r\n    fetchTodoList();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col\">\r\n        {<AddNewTodo onCreateTodo={fetchTodoList} />}\r\n        {<TodoList items={todoList} onUpdateTodo={fetchTodoList} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllTodos;\r\n","import { Route, Routes } from \"react-router-dom\";\nimport \"./App.css\";\nimport Layout from \"./components/layouts/Layout\";\nimport AllTodos from \"./pages/AllTodos\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Layout>\n        <AllTodos />\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}